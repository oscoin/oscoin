============
CONTRIBUTING
============

Haskell
-------

Read the included styleguide (``STYLE``).

Branching
---------

* Feature branches are prefixed with ``f/`` - these are branches which change
  functionality or implementation.
* Cleanup branches are prefixed with ``c/`` - these are branches which *do not*
  change any functionality or implementations. For example, fixing styling,
  removing an unused import etc.
* Release branches are prefixed with ``r/`` - these are only to be used when
  creating a release, eg. ``r/1.0.0``.
* Bug fix branches prefixed with ``b/`` are specifically addressing a
  divergence between what is expected and what is actual.

After pushing a branch, always open a pull-request. This gives visibility on
what you're working on. If the branch isn't ready for review, add ``[WIP]`` as
a prefix to the pull-request title.

Git
---

A properly formed git commit subject line should always be able to complete the
following sentence::

  If applied, this commit will _____

In addition, it should be capitalized and *must not* include a period.

When it comes to formatting, here's a model git commit message[1]_::

  Capitalized, short (50 chars or less) summary

  More detailed explanatory text, if necessary.  Wrap it to about 72
  characters or so.  In some contexts, the first line is treated as the
  subject of an email and the rest of the text as the body.  The blank
  line separating the summary from the body is critical (unless you omit
  the body entirely); tools like rebase can get confused if you run the
  two together.

  Write your commit message in the imperative: "Fix bug" and not "Fixed bug"
  or "Fixes bug."  This convention matches up with commit messages generated
  by commands like git merge and git revert.

  Further paragraphs come after blank lines.

  - Bullet points are okay, too.

  - Typically a hyphen or asterisk is used for the bullet, followed by a
    single space, with blank lines in between, but conventions vary here.

  - Use a hanging indent.

.. [1] <http://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html>

.. vim: filetype=rst
