#!/bin/sh
set -eu
remote_name=$1
url=${2#oss://}

err() { printf "%s\n" "$*" 1>&2; }

hooks_dir="$GIT_DIR/hooks"
script_prefix="$(cd "$(dirname "$0")/.."; pwd)"
lib_dir="$script_prefix/lib/oscoin"
if [ ! -d "$lib_dir" ]; then
    err "Directory to copy git hooks from does not exist:"
    err "$lib_dir"
    exit 1
fi

usage() {
    err "Usage: $(basename "$0") <remote-name> <url>"
    err
    err "This is only meant to be invoked by git itself."
    err
    err "remote-name is the name (e.g. origin) given to the remote."
    err
    err "url is of the form oss://<URL>"
}

if [ $# != 2 ]; then
    usage
    exit 1
fi

# TODO: Hooks won't affect initial run of git-remote-oss, and we have to
#       install them via something like `git oss init`. For now, we can
#       use this to test subsequent git operations, until initialization
#       supports hook installation.
# Unconditionally copy newest git hooks
cp -p "$lib_dir/pre-push.githook" "$hooks_dir/pre-push"
cp -p "$lib_dir/post-merge.githook" "$hooks_dir/post-merge"

export PATH=$PATH:/usr/lib/git-core
exec git-remote-https $remote_name $url
