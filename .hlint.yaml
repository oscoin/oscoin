# HLint configuration file

- arguments: [-XTypeApplications]

- modules:
  - {name: [Data.Set, Data.HashSet],     as: Set}
  - {name: [Data.Map],                   as: Map}
  - {name: [Data.HashMap],               as: HashMap}
  - {name: [Data.List.NonEmpty],         as: NonEmpty}
  - {name: [Data.Sequence],              as: Seq}
  - {name: [Data.Text],                  as: T}
  - {name: [Data.Text.Lazy],             as: LT}
  - {name: [Data.ByteString],            as: BS}
  - {name: [Data.ByteString.Lazy],       as: LBS}
  - {name: [Data.ByteString.Char8],      as: C8}
  - {name: [Data.ByteString.Lazy.Char8], as: L8}

- functions:
  - {name: unsafePerformIO, within: []}

- warn: {lhs: fmap, rhs: map}
- warn: {lhs: mconcat, rhs: concat}
- warn: {lhs: foldl, rhs: foldl'}
- warn: {lhs: return, rhs: pure}
- warn: {lhs: liftM, rhs: map}
- warn: {lhs: ap, rhs: (<*>)}
- warn: {lhs: mapM, rhs: traverse}
- warn: {lhs: concat (map f x), rhs: foldMap f x}
- warn: {lhs: second (const ()), rhs: void}
- warn: {lhs: map (const ()), rhs: void}

- ignore: {name: Use map, within: [Crypto.Data.Auth.Tree.Proof]}
- ignore: {name: Collapse lambdas}

- ignore: {name: Use concatMap}
- ignore: {name: Use ++}
- ignore: {name: Use &&}
- ignore: {name: Eta reduce}
- ignore: {name: Use lambda-case}
- ignore: {name: Use let}
- ignore: {name: Use newtype instead of data}
- ignore: {name: Redundant $}
- ignore: {name: Avoid reverse}
- ignore: {name: Use print}
- ignore: {name: Too strict maybe}
